CSS预处理语句：让编写CSS更加的强大，可以融入一些编程的思想。比如：变量、语句、函数等等。

        CSS预处理比较流行的库：sass less stylus

        sass预处理 -> 文件的后缀名 xxx.sass || xxx.scss -> 这样的文件浏览器是不认识的 -> 通过一些手段可以把 .sass文件或.scss文件 转成 .css -> 浏览器就认识了。

        sass文件转换：
            1. 官方提供的工具，用起来比较复杂，而且能做的事情比较单一，就是把sass文件转成css文件。
            2. gulp工具、webpack工具 : 比较强大的工具，不仅可以转成css文件，还可以做很多其他事情。
            3. 软件进行文件转换：考拉工具
            4. vsCode的插件 -> easy sass 插件

            scss文件和sass文件有啥区别？

                .sass 文件  写法  类似于 python

                        $variable: value 1
                        .rule-1
                            value: $variable

                        $variable: value 2
                        .rule-2
                            value: $variable

                .scss 文件  写法  类似于 css

                        $variable: value 1;
                        .rule-1 {
                            value: $variable;
                        }

                        $variable: value 2;
                        .rule-2 {
                            value: $variable;
                        }

            注：推荐使用 .scss文件去写sass代码，因为更容易上手。



    ------------语法------------------------------------------------------------------


    /* css注释 */
        // 双斜线的注释，最终不会被编译到 css 文件中。
        // 斜线加星号，会编译到 css 文件中。
        body{
            background: hotpink;
        }


    /* 变量 */
        $num:100;
        $color:red;
        .box{
            width: $num + px;
            color:$color;
        }


    //* 插值 #{}，可以给属性做成变量操作 */
        $key:margin;
        $i:2;
        .box#{$i}{
            #{$key}:100px;
        }

        $height:height;
        .box4{
            #{$height}:50px;
        }

    // 作用域
        // 要主要作用域的抒写顺序，只能找到前面定义的，后面定义的是找不到的

        $n:200;
        .xx{
            
            width: $n +px;
            $n:100;
            height: $n;
        }

    //嵌套
        ul{
            width: 300px;
            li{
                background-color: #ccc;
                p{
                    border: 1px solid red;
                }
                div{
                    font-size: $n +px;
                }
            }

        }

    //伪类方式 , 在嵌套写法中如何忽略空格 &

        ul{
            &:hover{
                color: #000;
            }
        }

    //属性嵌套
        // .cc{
        //     font-size: 10px;
        //     font-weight: bold;
        //     font-family: 宋体;
        // }

        .zz{
            font:{
                size: 20px;
                weight:bold;
                family:宋体;

            }
        }


    /* 运算 */
        // 如果两个都带有单位，是不能够进行计算的。
        // 除法是比较特殊的： font : 30px/24px 宋体; 
        // border-raduis : 20px/30px;
        //除法运算需要小括号（）括起来
        $nn:100px;
        $color:#123456;
        .box5{
            width: $nn *2;
            color: $color +123;
            //font:30px/24px 宋体
            font:(30/24)+px 宋体
        }


    /* 函数 */      //内置函数
        //round()四舍五入
        //random()随机数
        //percentage()百分比
        div{
            width: round(3.5);
            height: random();
            font-size: percentage(0.2);
        }

    //自定义函数
        @function sum($n,$m){
            @return $n + $m;
        }
        div{
            width: sum(200px,300px);
        }


    /* 混入 */
        //可以把样式混入到指定的样式中。
        // @mixin show{
        //     opacity: 1;
        //     color: hotpink;
        //     font-size: 20px;
        // }
        // div{
        //     width: 100px;
        //     @include show;
        // }


        //也可以传参
        @mixin show($color){
            opacity: 1;
            color: $color;
            font-size: 20px;
        }
        div{
            width: 100px;
            @include show(red);
        }
        .div{
            height: 100px;
            @include show(pink);
        }           

    /* 继承 */
        //当两个同样的样式，用混入的时候，并不会产生一个分组写法。
        //继承的写法：如果样式相同，会产生分组的写法, 
                    //如果样式不同，也会产生分组，只不过会把不同的代码单独提取出去。

        %show{
            width: 100px;
            color: #000;
            opacity: 1;
        }
        .div{
            @extend %show;
            height: 300px;
        }
        .div1{
            @extend %show;
            height: 300px;
            cursor: pointer;
        }


    /* 逻辑语句 */
        // if 
        $n:4;
        @if($n>3){
            .box1{
                width: 100px;
            }
        }
        @else{
            .box2{
                width: 200px;
            }
        }


        .box{
            width: 300px;
            @if(false){
                margin: 100px;
            }
            @else{
                padding: 100px;
            }
        }


        // @for @while 都有
        // through 表示从0开始到2结束
        @for $i from 1 through 5{
            @if($i>2){
                .div#{$i}{
                    width: 200 *$i +px;
                }
            }
        }

    /* css模块化 */
        // @import './common.scss';

            @import 'com.scss';