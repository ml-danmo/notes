对象是一种数据类型，可以添加属性和方法的就是对象。
    
    //var obj = {};  //空对象
    //console.log( typeof obj );  //object

   /*  var obj = {
        username : 'xiaoming',   //添加一个对象的属性(属性类似于变量)
        age : 20,
        gender : 'man',
        showName : function(){   //添加一个对象的方法(方法类似于函数)
            console.log(123);
        }
    };
    console.log( obj.username );
    obj.showName(); */

    /* var obj = {};
    obj.username = 'xiaoming';
    console.log( obj.username );
    obj.showName = function(){
        console.log(123);
    };
    obj.showName(); */

    //错误写法示例
    /*  var obj = 'hello';   //因为这个是字符串类型，不是对象类型，所以添加属性肯定添加不上
    obj.username = 'xiaoming';
    console.log( obj.username );  // undefined */

    /* var obj = null;
    obj.username = 'xiaoming';
    console.log( obj.username ); */

    //我们通过JS获取到的元素，类型都是对象，所以元素跟对象没有区别。

    //var elem = document.getElementById('elem');
    //console.log( typeof elem );  // object


    // 对对象中没有length时候，还要进行循环 -> for in
    /* var obj = {
        username : 'xiaoming',  
        age : 20,
        gender : 'man'
    };

    for( var attr in obj ){
        //console.log( attr );     // 对象中的key值
        console.log( obj[attr] );   // 对象中的value值
    } */

    var obj = {
        width : '200px',
        height : '100px',
        background : 'red'
    };

    var elem = document.querySelector('#elem');

    for(var attr in obj){
        elem.style[attr] = obj[attr];
    }